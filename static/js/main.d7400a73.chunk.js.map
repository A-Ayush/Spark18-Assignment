{"version":3,"sources":["actions/index.js","actions/actionTypes.js","component/ListItems.js","component/Checkbox.js","component/ListItemDisplay.js","component/App.js","reducer/ds.js","reducer/web.js","reducer/db.js","reducer/index.js","index.js","store/index.js"],"names":["changeDsCheckbox","value","type","changeDbCheckbox","changeWebCheckbox","listItems","props","toggleCheckboxChange","e","target","id","dispatch","this","ds","web","db","console","log","className","map","data","key","items","Component","connect","state","Checkbox","checked","onClick","ListItemDisplay","toggleDsCheckbox","toggleDbCheckbox","toggleWebCheckbox","dsDisplay","dbDisplay","webDisplay","length","aria-hidden","App","ListItems","React","initialState","combineReducers","action","obj","push","store","createStore","reducer","applyMiddleware","thunk","logger","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7400a73.chunk.js","sourcesContent":["import {\r\n    GET_INITIAL_STATE,\r\n    CHANGE_DS_CHECKBOX,\r\n    CHANGE_DB_CHECKBOX,\r\n    CHANGE_WEB_CHECKBOX\r\n} from './actionTypes';\r\n\r\n\r\nexport function fetchList(){\r\n    return {\r\n        type: GET_INITIAL_STATE\r\n    }\r\n}\r\n\r\nexport function changeDsCheckbox(value){\r\n    return {\r\n        type: CHANGE_DS_CHECKBOX,\r\n        value\r\n    }\r\n}\r\n\r\nexport function changeDbCheckbox(value){\r\n    return {\r\n        type: CHANGE_DB_CHECKBOX,\r\n        value\r\n    }\r\n}\r\n\r\nexport function changeWebCheckbox(value){\r\n    return {\r\n        type: CHANGE_WEB_CHECKBOX,\r\n        value\r\n    }\r\n}","export const GET_INITIAL_STATE = 'GET_INITIAL_STATE';\r\n\r\nexport const CHANGE_DS_CHECKBOX = 'CHANGE_DS_CHECKBOX';\r\nexport const CHANGE_DB_CHECKBOX = 'CHANGE_DB_CHECKBOX';\r\nexport const CHANGE_WEB_CHECKBOX = 'CHANGE_WEB_CHECKBOX';\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Checkbox } from './index';\r\nimport { changeDsCheckbox,changeDbCheckbox,changeWebCheckbox } from '../actions';\r\n\r\nclass listItems extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    \r\n    toggleCheckboxChange = (e) => {\r\n        // console.log(e.target.id);\r\n        const type = e.target.id;\r\n        const value = e.target.value;\r\n        if(type === '0'){\r\n            this.props.dispatch(changeDsCheckbox(value));\r\n        }else if(type === '1'){\r\n            this.props.dispatch(changeWebCheckbox(value));\r\n        }else{\r\n            this.props.dispatch(changeDbCheckbox(value));\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const {ds,web,db} = this.props;\r\n        console.log('Render');\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Data Structure</h2>\r\n                {\r\n                    ds.ds.map((data,key) => (\r\n                        <Checkbox items={data} key={key} toggleCheckboxChange={this.toggleCheckboxChange}/>\r\n                    )) \r\n                }\r\n                <h2>Web</h2>\r\n                {\r\n                    web.web.map((data,key) => (\r\n                        <Checkbox items={data} key={key} toggleCheckboxChange={this.toggleCheckboxChange} />\r\n                    )) \r\n                }\r\n                \r\n                <h2>DataBase</h2>\r\n                {\r\n                    db.db.map((data,key) => (\r\n                        <Checkbox items={data} key={key} toggleCheckboxChange={this.toggleCheckboxChange} />\r\n                    )) \r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction  mapStoreToProps(state){\r\n    return {\r\n        ds:state.ds,\r\n        web:state.web,\r\n        db:state.db\r\n    }\r\n}\r\nexport default connect(mapStoreToProps)(listItems);","import React, { Component } from 'react';\r\n\r\nclass Checkbox extends Component {\r\n    render() {\r\n        const {items,toggleCheckboxChange} = this.props;\r\n        // console.log(items);\r\n        return (\r\n            <label>\r\n                <input type=\"checkbox\" value= {items.value} id= {items.id}  checked={items.checked} onClick={toggleCheckboxChange}/>\r\n                {items.value}\r\n            </label>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { changeDsCheckbox,changeDbCheckbox,changeWebCheckbox } from '../actions';\r\n\r\nclass ListItemDisplay extends Component {\r\n    toggleDsCheckbox = (e) => {\r\n        // console.log(\"target\",e.target);\r\n        const value = e.target.id;\r\n        this.props.dispatch(changeDsCheckbox(value));\r\n    }\r\n    toggleDbCheckbox = (e) => {\r\n        // console.log(\"target\",e.target);\r\n        const value = e.target.id;\r\n        this.props.dispatch(changeDbCheckbox(value));\r\n    }\r\n    toggleWebCheckbox = (e) => {\r\n        // console.log(\"target\",e.target);\r\n        const value = e.target.id;\r\n        this.props.dispatch(changeWebCheckbox(value));\r\n    }\r\n    render() {\r\n        // console.log(\"display\",this.props.ds.dsDisplay);\r\n        const dsDisplay = this.props.ds.dsDisplay;\r\n        const dbDisplay = this.props.db.dbDisplay;\r\n        const webDisplay = this.props.web.webDisplay;\r\n        return (\r\n            <div className=\"mycontainer\">\r\n                <div className=\"display-container\">\r\n                    {dsDisplay.length > 0 && (\r\n                        <ul>\r\n                            <span className=\"item-heading\">Data Structure</span>\r\n                            {\r\n                                dsDisplay.map((data) => (\r\n                                    <li className=\"display-item\">\r\n                                        <span className=\"name\">{data}</span>\r\n                                        <i className=\"fa fa-times icon\" aria-hidden=\"true\" id={data} onClick={this.toggleDsCheckbox}></i>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n                <div className=\"display-container\">\r\n                    {webDisplay.length > 0 && (\r\n                        <ul>\r\n                            <span className=\"item-heading\">Web</span>\r\n                            {\r\n                                webDisplay.map((data) => (\r\n                                    <li className=\"display-item\">\r\n                                        <span className=\"name\">{data}</span>\r\n                                        <i className=\"fa fa-times icon\" aria-hidden=\"true\" id={data} onClick={this.toggleWebCheckbox}></i>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n                <div className=\"display-container\">\r\n                    {dbDisplay.length > 0 && (\r\n                        <ul>\r\n                            <span className=\"item-heading\">DataBase</span>\r\n                            {\r\n                                dbDisplay.map((data) => (\r\n                                    <li className=\"display-item\">\r\n                                        <span className=\"name\">{data}</span>\r\n                                        <i className=\"fa fa-times icon\" aria-hidden=\"true\" id={data} onClick={this.toggleDbCheckbox}></i>\r\n                                    </li>\r\n                                ))\r\n                            }\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n               \r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction  mapStoreToProps(state){\r\n    return {\r\n        ds:state.ds,\r\n        db:state.db,\r\n        web:state.web\r\n    }\r\n}\r\nexport default connect(mapStoreToProps)(ListItemDisplay);","import React from 'react';\nimport { ListItems,ListItemDisplay } from './';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"component-container\">\n        <ListItems/>\n        <ListItemDisplay />\n      </div>  \n    );\n  }\n}\n\nexport default App;\n","import {\r\n    GET_INITIAL_STATE,\r\n    CHANGE_DS_CHECKBOX\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    dsDisplay: [],\r\n    ds : [{value:'Array',checked:false, key:0,id:0},{value:'LinkList',checked:false,key:1,id:0},{value:'HashMap',checked:false,key:2,id:0},{value:'Stack',checked:false,key:3,id:0}]\r\n}\r\nexport default function auth(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INITIAL_STATE:{\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case CHANGE_DS_CHECKBOX: {\r\n            state.ds.map((obj) => {\r\n                if(obj.value === action.value){\r\n                    obj.checked = !obj.checked;\r\n                }\r\n            })\r\n            state.dsDisplay=[];\r\n            state.ds.map((obj) => {\r\n                if(obj.checked === true){\r\n                    state.dsDisplay.push(obj.value);\r\n                }\r\n            })\r\n            return { ...state };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_INITIAL_STATE,\r\n    CHANGE_WEB_CHECKBOX\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    webDisplay: [],\r\n    web : [{value:'HTML',checked:false,key:0,id:1},{value:'CSS',checked:false,key:1,id:1},{value:'JavaScript',checked:false,key:2,id:1},{value:'Nodejs',checked:false,key:3,id:1}]\r\n}\r\n\r\nexport default function auth(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INITIAL_STATE:{\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case CHANGE_WEB_CHECKBOX: {\r\n            state.web.map((obj) => {\r\n                if(obj.value == action.value){\r\n                    obj.checked = !obj.checked;\r\n                }\r\n            })\r\n            state.webDisplay=[];\r\n            state.web.map((obj) => {\r\n                if(obj.checked === true){\r\n                    state.webDisplay.push(obj.value);\r\n                }\r\n            })\r\n            return { ...state };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_INITIAL_STATE,\r\n    CHANGE_DB_CHECKBOX\r\n} from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    dbDisplay: [],\r\n    db: [{value:'SQL',checked:false,key:0,id:2},{value:'MongoDB',checked:false,key:1,id:2}]\r\n}\r\n\r\nexport default function auth(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_INITIAL_STATE:{\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case CHANGE_DB_CHECKBOX: {\r\n            state.db.map((obj) => {\r\n                if(obj.value == action.value){\r\n                    obj.checked = !obj.checked;\r\n                }\r\n            })\r\n            state.dbDisplay=[];\r\n            state.db.map((obj) => {\r\n                if(obj.checked === true){\r\n                    state.dbDisplay.push(obj.value);\r\n                }\r\n            })\r\n            return { ...state };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport ds from './ds';\r\nimport web from './web';\r\nimport db from './db';\r\n\r\nexport default combineReducers({\r\n    ds,\r\n    web,\r\n    db\r\n  });","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './component/App';\nimport { configureStore } from './store';\nconst store = configureStore();\nconsole.log('store:', store.getState());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n","import { applyMiddleware, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from '../reducer';\r\nimport logger from 'redux-logger';\r\nlet store;\r\n\r\nexport function configureStore() {\r\n  //--- store can have only one reducer so we combineAll Reducer and import it here as reducer\r\n  store = createStore(reducer, applyMiddleware(thunk, logger));\r\n\r\n  return store;\r\n}\r\n"],"sourceRoot":""}